if __name__ == "__main__":
   print "LOADING AS MAIN"
else:
   print "LOADING AS MODULE"

git checkout --> takes away changes until last commit

virtualenv pd7en
cd bin
source activate
pip install flask

9/22
Make default app.py

Route	     call this function
/home	     home()
/about	     about()

app.py
from flask import Flask

app = Flask(__name__), render_template

@app.route("/about")
def about():
    return render_template("about.html")

@app.route("/about")
def about():
    page = """
    <h1>About</h1>
<hr>
<ol>
<li>Fred Flintstone</li>
<li>Mr. T</li>
<li>The Hulk</li>
</ol>
"""
    return page

@app.route("/home") --> if you go to path home, run this function)
@app.route("/")
def home():
    return "<h1>Hello World</h1>"

@app.route("/lucky")
def lucky():
    import random
    number = random.randrange(1, 100)
    return "Lucky Number: %d"%(number)

if __name__ == "__main__":
    app.debug = True;
    app.run(host = '0.0.0.0', port = 8000)
    #127.0.0.1 --> private address to use
    

You would run this program on localhost:8000/home
""" -->multiline string
"""

Web templates are used to create the HTML.

def lucky():
    import random
    n = random.randrange(1, 100)
    return render_template("lucky.html", number = n)

lucky.html file:
<!DOCTYPE HTML>
<h1>Lucky Number</h1>
<h2>Your Lucky Number is {{number}}</h2>
 -n will replace number in the HTML file.

Dictionaries:
    d = {}
    d[10] = "hello"
    d['one'] = 12345
    d['two'] = "Something"
    can also be initialized with values
    d = {'one': hello, 'two': 12345}
    Mutable

{10:'hello', 'one': 12345, 'two' = "Something"}
    d.has_key() - checks if a key exists
    d.keys() - returns all the keys

You can access the variables using d[key] or d.key
You can also print out the dictionary itself
Now, instead of using {{variable}}, you will be able to use {{d[variable]}} in
the template.

Lists:
    a = [10, 20, 'thirty', 40, 'fifty']
    You can return char in string by a[index] or multiple by a[startind:endind]

You can also run loops
    Ex)<ul>
	 {% for item in l %}
    	 <li>{{item}}</li>
	 {% endfor %}
       </ul>

@app.route("/profile/<lastname>")
def profile(lastname=""):
